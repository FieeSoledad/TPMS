<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huadi.project.tpms.dao.TextbookDao">

    <resultMap id="BaseResultMap" type="com.huadi.project.tpms.entity.Textbook">
        <!--@Table textbook-->
        <result property="isbn" column="ISBN" jdbcType="VARCHAR"/>
        <result property="courseId" column="course_id" jdbcType="VARCHAR"/>
        <result property="textbookName" column="textbook_name" jdbcType="VARCHAR"/>
        <result property="textbookQuantity" column="textbook_quantity" jdbcType="INTEGER"/>
        <result property="textbookPublisher" column="textbook_publisher" jdbcType="VARCHAR"/>
        <result property="textbookLocation" column="textbook_location" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryTextbookById" resultMap="BaseResultMap">
        select
          ISBN, course_id, textbook_name, textbook_quantity, textbook_publisher, textbook_location
        from textbook
        where ISBN = #{isbn}
    </select>
<!--查询按钮的实现-->
    <select id="queryTextbookByISBN" resultMap="BaseResultMap">
        select
            ISBN, course_id, textbook_name, textbook_quantity, textbook_publisher, textbook_location
        from textbook
        where ISBN = #{isbn}
    </select>
    <select id="queryTextbookByCourseId" resultMap="BaseResultMap">
        select
            ISBN, course_id, textbook_name, textbook_quantity, textbook_publisher, textbook_location
        from textbook
        where course_id = #{courseId}
    </select>
    <select id="queryTextbookByTextbookName" resultMap="BaseResultMap">
        select
            ISBN, course_id, textbook_name, textbook_quantity, textbook_publisher, textbook_location
        from textbook
        where textbook_name = #{textbookName}
    </select>
    <select id="queryTextbookByTextbookQuantity" resultMap="BaseResultMap">
        select
            ISBN, course_id, textbook_name, textbook_quantity, textbook_publisher, textbook_location
        from textbook
        where textbook_quantity = #{textbookQuantity}
    </select>
    <select id="queryTextbookByTextbookPublisher" resultMap="BaseResultMap">
        select
            ISBN, course_id, textbook_name, textbook_quantity, textbook_publisher, textbook_location
        from textbook
        where textbook_publisher = #{textbookPublisher}
    </select>
    <select id="queryTextbookByTextbookLocation" resultMap="BaseResultMap">
        select
            ISBN, course_id, textbook_name, textbook_quantity, textbook_publisher, textbook_location
        from textbook
        where textbook_location = #{textbookLocation}
    </select>



    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from textbook
        <where>
            <if test="isbn != null and isbn != ''">
                and ISBN = #{isbn}
            </if>
            <if test="courseId != null and courseId != ''">
                and course_id = #{courseId}
            </if>
            <if test="textbookName != null and textbookName != ''">
                and textbook_name = #{textbookName}
            </if>
            <if test="textbookQuantity != null">
                and textbook_quantity = #{textbookQuantity}
            </if>
            <if test="textbookPublisher != null and textbookPublisher != ''">
                and textbook_publisher = #{textbookPublisher}
            </if>
            <if test="textbookLocation != null and textbookLocation != ''">
                and textbook_location = #{textbookLocation}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="isbn" useGeneratedKeys="true">
        insert into textbook(ISBN,course_id, textbook_name, textbook_quantity, textbook_publisher, textbook_location)
        values (#{isbn},#{courseId}, #{textbookName}, #{textbookQuantity}, #{textbookPublisher}, #{textbookLocation})
    </insert>

    <insert id="insertBatch" keyProperty="isbn" useGeneratedKeys="true">
        insert into textbook(course_id, textbook_name, textbook_quantity, textbook_publisher, textbook_location)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.courseId}, #{entity.textbookName}, #{entity.textbookQuantity}, #{entity.textbookPublisher}, #{entity.textbookLocation})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="isbn" useGeneratedKeys="true">
        insert into textbook(course_id, textbook_name, textbook_quantity, textbook_publisher, textbook_location)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.courseId}, #{entity.textbookName}, #{entity.textbookQuantity}, #{entity.textbookPublisher}, #{entity.textbookLocation})
        </foreach>
        on duplicate key update
        course_id = values(course_id),
        textbook_name = values(textbook_name),
        textbook_quantity = values(textbook_quantity),
        textbook_publisher = values(textbook_publisher),
        textbook_location = values(textbook_location)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update textbook
        <set>
            <if test="courseId != null and courseId != ''">
                course_id = #{courseId},
            </if>
            <if test="textbookName != null and textbookName != ''">
                textbook_name = #{textbookName},
            </if>
            <if test="textbookQuantity != null">
                textbook_quantity = #{textbookQuantity},
            </if>
            <if test="textbookPublisher != null and textbookPublisher != ''">
                textbook_publisher = #{textbookPublisher},
            </if>
            <if test="textbookLocation != null and textbookLocation != ''">
                textbook_location = #{textbookLocation},
            </if>
        </set>
        where ISBN = #{isbn}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from textbook where ISBN = #{isbn}
    </delete>
   <!--查询数据库全部内容-->
    <select id="textbookSelectAll" resultMap="BaseResultMap">
        select * from textbook limit #{pageStart} ,#{pageEnd}
    </select>
    <select id="textbookSelectAllTex" resultMap="BaseResultMap">
        select * from textbook
    </select>

</mapper>

